import unittest
from dulwich import client as client, index as index, objects as objects, repo as repo, server as server
from dulwich.contrib import swift as swift
from typing import Any

class DulwichServer:
    port: Any = ...
    backend: Any = ...
    def __init__(self, backend: Any, port: Any) -> None: ...
    server: Any = ...
    job: Any = ...
    def run(self) -> None: ...
    def stop(self) -> None: ...

class SwiftSystemBackend(server.Backend):
    def open_repository(self, path: Any): ...

class SwiftRepoSmokeTest(unittest.TestCase):
    @classmethod
    def setUpClass(cls) -> None: ...
    @classmethod
    def tearDownClass(cls) -> None: ...
    scon: Any = ...
    temp_d: Any = ...
    def setUp(self) -> None: ...
    def tearDown(self) -> None: ...
    def test_init_bare(self) -> None: ...
    def test_clone_bare(self) -> None: ...
    def test_push_commit(self): ...
    def test_push_branch(self): ...
    def test_push_multiple_branch(self): ...
    def test_push_data_branch(self): ...
    def test_clone_then_push_data(self): ...
    def test_push_remove_branch(self): ...
    def test_push_annotated_tag(self): ...
