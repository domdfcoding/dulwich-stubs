from dulwich.objects import Blob as Blob
from dulwich.patch import is_binary as is_binary
from typing import Any

CRLF: bytes
LF: bytes

def convert_crlf_to_lf(text_hunk: Any): ...
def convert_lf_to_crlf(text_hunk: Any): ...
def get_checkout_filter(core_eol: Any, core_autocrlf: Any, git_attributes: Any): ...
def get_checkin_filter(core_eol: Any, core_autocrlf: Any, git_attributes: Any): ...
def get_checkout_filter_autocrlf(core_autocrlf: Any): ...
def get_checkin_filter_autocrlf(core_autocrlf: Any): ...

class BlobNormalizer:
    config_stack: Any = ...
    gitattributes: Any = ...
    fallback_read_filter: Any = ...
    fallback_write_filter: Any = ...
    def __init__(self, config_stack: Any, gitattributes: Any) -> None: ...
    def checkin_normalize(self, blob: Any, tree_path: Any): ...
    def checkout_normalize(self, blob: Any, tree_path: Any): ...

def normalize_blob(blob: Any, conversion: Any, binary_detection: Any): ...
