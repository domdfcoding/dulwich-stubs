from dulwich.errors import HookError as HookError
from typing import Any, Optional

class Hook:
    def execute(self, *args: Any) -> None: ...

class ShellHook(Hook):
    name: Any = ...
    filepath: Any = ...
    numparam: Any = ...
    pre_exec_callback: Any = ...
    post_exec_callback: Any = ...
    cwd: Any = ...
    def __init__(self, name: Any, path: Any, numparam: Any, pre_exec_callback: Optional[Any] = ..., post_exec_callback: Optional[Any] = ..., cwd: Optional[Any] = ...) -> None: ...
    def execute(self, *args: Any): ...

class PreCommitShellHook(ShellHook):
    def __init__(self, controldir: Any) -> None: ...

class PostCommitShellHook(ShellHook):
    def __init__(self, controldir: Any) -> None: ...

class CommitMsgShellHook(ShellHook):
    def __init__(self, controldir: Any): ...

class PostReceiveShellHook(ShellHook):
    controldir: Any = ...
    def __init__(self, controldir: Any) -> None: ...
    def execute(self, client_refs: Any): ...
