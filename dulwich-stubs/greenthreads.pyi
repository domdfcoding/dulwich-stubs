from dulwich.object_store import MissingObjectFinder as MissingObjectFinder, ObjectStoreIterator as ObjectStoreIterator
from dulwich.objects import Commit as Commit, Tag as Tag
from typing import Any, Optional

class GreenThreadsMissingObjectFinder(MissingObjectFinder):
    object_store: Any = ...
    sha_done: Any = ...
    objects_to_send: Any = ...
    progress: Any = ...
    def __init__(self, object_store: Any, haves: Any, wants: Any, progress: Optional[Any] = ..., get_tagged: Optional[Any] = ..., concurrency: int = ..., get_parents: Optional[Any] = ...) -> None: ...

class GreenThreadsObjectStoreIterator(ObjectStoreIterator):
    finder: Any = ...
    p: Any = ...
    def __init__(self, store: Any, shas: Any, finder: Any, concurrency: int = ...) -> None: ...
    def retrieve(self, args: Any): ...
    def __iter__(self) -> Any: ...
    def __len__(self): ...
